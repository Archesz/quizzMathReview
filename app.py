import streamlit as st
import random

# ---------- CONFIG ----------- #
st.set_page_config(page_title="FlashCards - Jovi", page_icon="üöÄ")

# ---------- Fun√ß√µes ----------- #
def local_css(file_name):
    with open(file_name) as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# -------- Sidebar ---------- #

with st.sidebar:
    st.write("**Projeto de Revis√£o (Jovi):**")

    st.caption("Detalhes")
    st.write("**Quest√µes Criadas com:**")
    st.caption("LUNA: 219 Quest√µes.")
    st.caption("By Jovi (Atosh)| Version 0.2.1")

# CSS
local_css("style.css")

# ---------------- SESSION STATE ----------------

if "button_clicked" not in st.session_state:
    st.session_state.button_clicked = False

if "button2_clicked" not in st.session_state:
    st.session_state.button2_clicked = False

if "q_no" not in st.session_state:
    st.session_state.q_no = 0

if "q_no_temp" not in st.session_state:
    st.session_state.q_no_temp = 0

if "questoes" not in st.session_state:
    st.session_state.questoes = [
        {"Pergunta": "O que √© um ponto?", "Resposta": "um ponto √© uma entidade fundamental que n√£o tem dimens√µes. √â considerado um objeto elementar, sem comprimento, largura ou altura.", "image": False},
        {"Pergunta": "O que √© uma reta?", "Resposta": "Uma reta √© um objeto geom√©trico fundamental. Uma linha inifita e sem curvas. √â composta por uma sequ√™ncia cont√≠nua de pontos.", "image": False},
        {"Pergunta": "O que √© um plano?", "Resposta": "Um plano √© um conceito matem√°tico que pode ser descrito como uma superf√≠ce plana e infinita que se estende para todas as dimens√µes. Composto por tr√™s pontos n√£o colineares.", "image": False},
        {"Pergunta": "O que significa pontos colineares?", "Resposta": "S√£o pontos que pertencem a uma mesma linha.", "image": False},
        {"Pergunta": "Defina segmento de reta:", "Resposta": "Um segmento de reta √© uma reta que possui um ponto inicial e final. Ou seja, √© uma reta finita, ou uma parte de uma reta.", "image": False},
        {"Pergunta": "Defina retas paralelas:", "Resposta": "Retas paralelas s√£o retas que NUNCA se encontram. Podemos tra√ßar uma reta perpendicular que separa ambas.", "image": False},
        {"Pergunta": "Defina retas perpendiculares: ", "Resposta": "S√£o retas que formam um √¢ngulo de 90¬∫ entre si.", "image": False},
        {"Pergunta": "O que √© uma semireta?", "Resposta": "Uma semireta √© uma reta que possui in√≠cio e n√£o possu√≠ fim.", "image": False},
        {"Pergunta": "O que √© um raio?", "Resposta": "Um raio √© um segmento de reta que liga o centro de um c√≠rculo at√© qualquer ponto na circunfer√™ncia de um c√≠rculo.", "image": False},
        {"Pergunta": "O que √© uma corda?", "Resposta": "√â um segmento que liga dois pontos quaisquer da circunfer√™ncia sem passar pelo centro.", "image": False},
        {"Pergunta": "O que √© um diametro?", "Resposta": "√â um segmento que liga dois pontos da circunfer√™ncia, passando pelo centro do c√≠rculo", "image": False},
        {"Pergunta": "O que √© um √¢ngulo?", "Resposta": "Um √¢ngulo √© a uni√£o de duas semirretas com um v√©rtice comum.", "image": False},
        {"Pergunta": "O que √© um v√©rtice?", "Resposta": "Encontro de duas semiretas.", "image": False},
        {"Pergunta": "Defina √¢ngulo agudo:", "Resposta": "√â um √¢ngulo com menos de 90¬∫", "image": False},
        {"Pergunta": "Defina √¢ngulo reto:", "Resposta": "√â um √¢ngulo com 90¬∫.", "image": False},
        {"Pergunta": "Defina √¢ngulo obtuso:", "Resposta": "√â um √¢ngulo maior que 90¬∫.", "image": False},
        {"Pergunta": "Defina √¢ngulo raso:", "Resposta": "√â um √¢ngulo com 180¬∫", "image": False},
        {"Pergunta": "Quantos Graus tem um tri√¢ngulo?", "Resposta": "Qualquer tri√¢ngulo possu√≠ 180¬∫.", "image": False},
        {"Pergunta": "Quantos Graus tem um c√≠rculo?", "Resposta": "J√∫piter", "image": False},
        {"Pergunta": "Quais s√£o as classifica√ß√µes de um tri√¢ngulo?", "Resposta": "Podemos classificar um tri√¢ngulo como Escalenos (Tr√™s lados diferentes), Is√≥sceles (Dois lados iguais) ou Equil√°tero (Tr√™s lados iguais).", "image": False},
        {"Pergunta": "O que s√£o retas transversair?", "Resposta": "Retas transversais s√£o retas que cruzam um par ou um feixe de retas paralelas.", "image": False},
        {"Pergunta": "Em que tipo de tri√¢ngulo podemos aplicar o Teorema de Pitagoras?", "Resposta": "O teorema de pitagoras pode ser aplicado em tri√¢ngulos ret√¢ngulos.", "image": False},
        {"Pergunta": "Qual √© a hipotenusa e os catetos de um tri√¢ngulo ret√¢ngulo?", "Resposta": "A hipotenusa √© o √¢ngulo oposto ao √¢ngulo reto, os catetos s√£o os demais lados.", "image": False},
        {"Pergunta": "Qual a f√≥rmula do teorema de pitagoras?", "Resposta": "a¬≤ + b¬≤ = c¬≤", "image": False},
        {"Pergunta": "O que √© a Mediana de um tri√¢ngulo?", "Resposta": "Mediana √© um segmento que divide as bases do tri√¢ngulo em duas partes iguais. Dessa forma temos que mediana √© um segmento de reta com origem em um dos v√©rtices do tri√¢ngulo e extremidade no ponto m√©dio do lado oposto ao v√©rtice.", "image": False},
        {"Pergunta": "O que √© a Bissetriz?", "Resposta": "Bissetriz tamb√©m √© um segmento de reta com origem em um dos v√©rtices do tri√¢ngulo com a outra extremidade no lado oposto a esse v√©rtice. Sendo que ela divide ao meio o √¢ngulo correspondente ao v√©rtice.", "image": False},
        {"Pergunta": "O que √© a altura de um tri√¢ngulo?", "Resposta": "Encontramos a medida da altura de um tri√¢ngulo atrav√©s de um segmento de reta com origem em um dos v√©rtices e perpendicular (forma um √¢ngulo de 90¬∫) ao lado oposto.", "image": False},
        {"Pergunta": "Como se calcula a √°rea de um tri√¢ngulo?", "Resposta": "A = \\frac{b \cdot h}{2}", "image": False},
        {"Pergunta": "", "Resposta": "J√∫piter", "image": False},
        {"Pergunta": "", "Resposta": "J√∫piter", "image": False},
    ]

# callbacks
def callback():
    st.session_state.button_clicked = True


def callback2():
    st.session_state.button2_clicked = True


# -------- Main Page -------- #
tab1, tab2, tab3 = st.tabs(["Flashcards", "Ranking", "Fontes"])

respondidas = []

def sorteiaPergunta():
    if st.session_state.questoes:
        questao = random.choice(st.session_state.questoes)
        st.session_state.questoes.remove(questao)
        return questao
    else:
        return None

with tab1:
    st.title("FlashCards")

    col1, col2 = st.columns(2)

    sortear = st.button("Sortear", on_click=callback)
    if sortear and st.session_state.button_clicked:
        questao = sorteiaPergunta()
        if questao:
            st.subheader(questao["Pergunta"])

            with st.expander("Resposta"):
                st.write(questao["Resposta"])
                if questao["image"] != False:
                    st.image(questao["Image"])
        else:
            st.warning("Todas as perguntas foram respondidas.")
